import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const { text, type = 'general', context } = await request.json()

    if (!text) {
      return NextResponse.json(
        { error: 'El texto es requerido' },
        { status: 400 }
      )
    }

    // Simular procesamiento de IA (en un proyecto real usar√≠as OpenAI, Claude, etc.)
    const response = await generateAIResponse(text, type, context)

    return NextResponse.json({
      success: true,
      data: {
        originalText: text,
        response: response.content,
        type: type,
        confidence: response.confidence,
        suggestions: response.suggestions,
        processingTime: Math.random() * 1000 + 500 // 500-1500ms
      }
    })
  } catch (error) {
    console.error('Error en endpoint de IA:', error)
    return NextResponse.json(
      { error: 'Error interno del servidor' },
      { status: 500 }
    )
  }
}

async function generateAIResponse(text: string, type: string, context?: any) {
  // Simular diferentes tipos de respuestas seg√∫n el contexto
  const lowerText = text.toLowerCase()
  
  if (type === 'summary' || lowerText.includes('resumir') || lowerText.includes('resumen')) {
    return {
      content: generateSummary(text),
      confidence: 0.9,
      suggestions: ['Ver requisitos detallados', 'Proceso de solicitud', 'Documentaci√≥n necesaria']
    }
  }
  
  if (type === 'analysis' || lowerText.includes('analizar') || lowerText.includes('an√°lisis')) {
    return {
      content: generateAnalysis(text, context),
      confidence: 0.85,
      suggestions: ['Ver recomendaciones', 'Pr√≥ximos pasos', 'Recursos relacionados']
    }
  }
  
  if (type === 'recommendation' || lowerText.includes('recomendar') || lowerText.includes('recomendaci√≥n')) {
    return {
      content: generateRecommendations(text, context),
      confidence: 0.8,
      suggestions: ['Ver recursos sugeridos', 'Aplicar recomendaciones', 'Hacer seguimiento']
    }
  }
  
  // Respuesta general
  return {
    content: generateGeneralResponse(text),
    confidence: 0.75,
    suggestions: ['Hacer pregunta espec√≠fica', 'Ver ejemplos', 'Obtener m√°s informaci√≥n']
  }
}

function generateSummary(text: string): string {
  return `**üìã Resumen Ejecutivo:**

**üéØ Objetivo Principal:**
${extractObjective(text)}

**üí∞ Beneficios:**
‚Ä¢ ${getRandomBenefit()}
‚Ä¢ ${getRandomBenefit()}
‚Ä¢ ${getRandomBenefit()}

**üìÖ Informaci√≥n Clave:**
‚Ä¢ **Plazo:** ${getRandomDeadline()}
‚Ä¢ **Importe:** ${getRandomAmount()}
‚Ä¢ **Sector:** ${getRandomSector()}

**üìã Requisitos Principales:**
${getRandomRequirements()}

**üí° Recomendaciones:**
1. ${getRandomRecommendation()}
2. ${getRandomRecommendation()}
3. ${getRandomRecommendation()}

¬øTe gustar√≠a que profundice en alg√∫n aspecto espec√≠fico?`
}

function generateAnalysis(text: string, context?: any): string {
  return `**üìä An√°lisis Detallado:**

**üîç Puntos Clave Identificados:**
‚Ä¢ ${getRandomAnalysisPoint()}
‚Ä¢ ${getRandomAnalysisPoint()}
‚Ä¢ ${getRandomAnalysisPoint()}

**üìà Oportunidades:**
${getRandomOpportunity()}

**‚ö†Ô∏è Consideraciones Importantes:**
${getRandomConsideration()}

**üéØ Pr√≥ximos Pasos Sugeridos:**
1. ${getRandomNextStep()}
2. ${getRandomNextStep()}
3. ${getRandomNextStep()}

**üìä Nivel de Relevancia:** ${getRandomRelevance()}%`
}

function generateRecommendations(text: string, context?: any): string {
  return `**üéØ Recomendaciones Personalizadas:**

**üìö Recursos Prioritarios:**
1. **${getRandomResource()}"** - ${getRandomResourceDescription()}
2. **${getRandomResource()}"** - ${getRandomResourceDescription()}
3. **${getRandomResource()}"** - ${getRandomResourceDescription()}

**üìà Acciones Inmediatas:**
‚Ä¢ ${getRandomAction()}
‚Ä¢ ${getRandomAction()}
‚Ä¢ ${getRandomAction()}

**‚è∞ Cronograma Sugerido:**
‚Ä¢ **Esta semana:** ${getRandomWeeklyAction()}
‚Ä¢ **Este mes:** ${getRandomMonthlyAction()}
‚Ä¢ **Pr√≥ximos 3 meses:** ${getRandomQuarterlyAction()}

**üí° Consejos Adicionales:**
${getRandomTip()}

¬øQuieres que profundice en alguna de estas recomendaciones?`
}

function generateGeneralResponse(text: string): string {
  return `He analizado tu consulta sobre "${text}". Como asistente de IA especializado en emprendimiento, puedo ayudarte con:

**üîç An√°lisis y Res√∫menes:**
‚Ä¢ Resumir ayudas y recursos
‚Ä¢ Analizar documentos empresariales
‚Ä¢ Extraer informaci√≥n clave

**üìä Progreso y Recomendaciones:**
‚Ä¢ Revisar tu avance en cursos
‚Ä¢ Sugerir pr√≥ximos pasos
‚Ä¢ Personalizar recomendaciones

**üí° Asesoramiento:**
‚Ä¢ Responder dudas sobre emprendimiento
‚Ä¢ Ayudar con planificaci√≥n
‚Ä¢ Sugerir estrategias

¬øPodr√≠as ser m√°s espec√≠fico sobre lo que necesitas? Por ejemplo:
‚Ä¢ "Resume esta ayuda: [texto]"
‚Ä¢ "Analiza mi progreso en cursos"
‚Ä¢ "¬øC√≥mo puedo mejorar mi plan de negocio?"`
}

function extractObjective(text: string): string {
  const objectives = [
    'Apoyar la digitalizaci√≥n de peque√±as y medianas empresas',
    'Fomentar la innovaci√≥n tecnol√≥gica en el sector empresarial',
    'Facilitar el acceso a financiaci√≥n para emprendedores',
    'Promover la internacionalizaci√≥n de empresas',
    'Impulsar la creaci√≥n de empleo joven'
  ]
  return objectives[Math.floor(Math.random() * objectives.length)]
}

function getRandomBenefit(): string {
  const benefits = [
    'Financiaci√≥n directa para tu proyecto',
    'Reducci√≥n de costes operativos',
    'Acceso a redes de contactos profesionales',
    'Formaci√≥n especializada incluida',
    'Asesoramiento t√©cnico gratuito'
  ]
  return benefits[Math.floor(Math.random() * benefits.length)]
}

function getRandomRecommendation(): string {
  const recommendations = [
    'Prepara toda la documentaci√≥n con antelaci√≥n',
    'Contacta con un asesor especializado',
    'Revisa los criterios de elegibilidad detalladamente',
    'Presenta la solicitud lo antes posible',
    'Considera alternativas complementarias'
  ]
  return recommendations[Math.floor(Math.random() * recommendations.length)]
}

function getRandomAnalysisPoint(): string {
  const points = [
    'Alto potencial de impacto en tu sector',
    'Requisitos accesibles para tu perfil empresarial',
    'Plazo de solicitud favorable',
    'Importe significativo para tu proyecto',
    'Proceso de evaluaci√≥n transparente'
  ]
  return points[Math.floor(Math.random() * points.length)]
}

function getRandomOpportunity(): string {
  const opportunities = [
    'Posibilidad de obtener financiaci√≥n adicional',
    'Acceso a programas de seguimiento',
    'Networking con otros beneficiarios',
    'Visibilidad en el ecosistema emprendedor',
    'Oportunidad de escalar tu negocio'
  ]
  return opportunities[Math.floor(Math.random() * opportunities.length)]
}

function getRandomConsideration(): string {
  const considerations = [
    'Competencia alta por el n√∫mero limitado de plazas',
    'Documentaci√≥n compleja que requiere tiempo de preparaci√≥n',
    'Criterios de evaluaci√≥n muy espec√≠ficos',
    'Plazos de resoluci√≥n pueden ser largos',
    'Necesidad de justificar el impacto del proyecto'
  ]
  return considerations[Math.floor(Math.random() * considerations.length)]
}

function getRandomNextStep(): string {
  const steps = [
    'Revisar todos los requisitos detalladamente',
    'Preparar la documentaci√≥n necesaria',
    'Contactar con el organismo gestor',
    'Definir el cronograma de ejecuci√≥n',
    'Buscar asesoramiento especializado'
  ]
  return steps[Math.floor(Math.random() * steps.length)]
}

function getRandomRelevance(): number {
  return Math.floor(Math.random() * 30) + 70 // 70-100%
}

function getRandomResource(): string {
  const resources = [
    'Curso de Finanzas Empresariales',
    'Subvenci√≥n para Digitalizaci√≥n',
    'Programa de Mentor√≠a',
    'Ayuda para Exportaci√≥n',
    'Fondo de Innovaci√≥n'
  ]
  return resources[Math.floor(Math.random() * resources.length)]
}

function getRandomResourceDescription(): string {
  const descriptions = [
    'Perfecto para tu nivel y sector',
    'Alta compatibilidad con tu perfil',
    'Recomendado por expertos del sector',
    'Ideal para tu etapa empresarial',
    'Muy valorado por otros emprendedores'
  ]
  return descriptions[Math.floor(Math.random() * descriptions.length)]
}

function getRandomAction(): string {
  const actions = [
    'Solicitar informaci√≥n adicional',
    'Preparar documentaci√≥n b√°sica',
    'Contactar con otros beneficiarios',
    'Definir objetivos espec√≠ficos',
    'Crear un plan de seguimiento'
  ]
  return actions[Math.floor(Math.random() * actions.length)]
}

function getRandomWeeklyAction(): string {
  const weekly = [
    'Reunir documentaci√≥n inicial',
    'Contactar con asesores',
    'Definir objetivos del proyecto',
    'Investigar casos de √©xito',
    'Preparar presentaci√≥n inicial'
  ]
  return weekly[Math.floor(Math.random() * weekly.length)]
}

function getRandomMonthlyAction(): string {
  const monthly = [
    'Completar solicitud formal',
    'Implementar mejoras sugeridas',
    'Establecer m√©tricas de seguimiento',
    'Crear red de contactos',
    'Desarrollar plan de ejecuci√≥n'
  ]
  return monthly[Math.floor(Math.random() * monthly.length)]
}

function getRandomQuarterlyAction(): string {
  const quarterly = [
    'Evaluar resultados obtenidos',
    'Planificar siguiente fase',
    'Expandir a nuevos mercados',
    'Optimizar procesos implementados',
    'Buscar nuevas oportunidades'
  ]
  return quarterly[Math.floor(Math.random() * quarterly.length)]
}

function getRandomTip(): string {
  const tips = [
    'Mant√©n un registro detallado de todos los procesos',
    'No subestimes el tiempo de preparaci√≥n de documentaci√≥n',
    'Considera el valor a largo plazo, no solo el beneficio inmediato',
    'Aprovecha las oportunidades de networking que ofrecen estos programas',
    'S√© espec√≠fico y cuantificable en tus objetivos'
  ]
  return tips[Math.floor(Math.random() * tips.length)]
}

function getRandomAmount(): string {
  const amounts = ['2.000', '5.000', '10.000', '15.000', '25.000']
  return amounts[Math.floor(Math.random() * amounts.length)]
}

function getRandomSector(): string {
  const sectors = ['tecnolog√≠a', 'retail', 'servicios', 'manufactura', 'salud']
  return sectors[Math.floor(Math.random() * sectors.length)]
}

function getRandomDeadline(): string {
  const deadlines = ['hasta el 15 de marzo', 'hasta el 30 de abril', 'hasta el 1 de junio', 'hasta final de a√±o']
  return deadlines[Math.floor(Math.random() * deadlines.length)]
}

function getRandomStage(): string {
  const stages = ['startup temprana', 'crecimiento', 'consolidaci√≥n', 'expansi√≥n']
  return stages[Math.floor(Math.random() * stages.length)]
}

function getRandomRequirements(): string {
  const requirements = [
    'ser PYME constituida, tener menos de 50 empleados',
    'facturaci√≥n anual inferior a 10M‚Ç¨, estar al corriente de pagos',
    'proyecto innovador, plan de negocio detallado',
    'certificado de antig√ºedad, memoria t√©cnica'
  ]
  return requirements[Math.floor(Math.random() * requirements.length)]
}

function getRandomDuration(): string {
  const durations = ['2', '3', '4', '6', '8']
  return durations[Math.floor(Math.random() * durations.length)]
}

function getRandomTopic(): string {
  const topics = [
    'marketing digital',
    'gesti√≥n financiera',
    'liderazgo empresarial',
    'ventas consultivas',
    'transformaci√≥n digital'
  ]
  return topics[Math.floor(Math.random() * topics.length)]
}

function getRandomModules(): string {
  const modules = ['4', '6', '8', '10', '12']
  return modules[Math.floor(Math.random() * modules.length)]
}

function getRandomLevel(): string {
  const levels = ['principiantes', 'nivel intermedio', 'avanzado']
  return levels[Math.floor(Math.random() * levels.length)]
}
