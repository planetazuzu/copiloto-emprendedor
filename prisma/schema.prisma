// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  sector    String?
  stage     String?
  needs     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  
  // Progreso de cursos
  courseProgress CourseProgress[]
  
  // Bookmarks de recursos
  bookmarks      Bookmark[]

  @@map("users")
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  users User[]

  @@map("organizations")
}

model Resource {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  sector      String?
  stage       String?
  url         String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  bookmarks Bookmark[]

  @@map("resources")
}

model Course {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  duration    Int      // en minutos
  level       String   // beginner, intermediate, advanced
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  progress CourseProgress[]

  @@map("courses")
}

model CourseProgress {
  id        String   @id @default(cuid())
  userId    String
  courseId  String
  progress  Int      @default(0) // 0-100
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])

  @@unique([userId, courseId])
  @@map("course_progress")
}

model Bookmark {
  id         String   @id @default(cuid())
  userId     String
  resourceId String
  createdAt  DateTime @default(now())

  // Relaciones
  user     User     @relation(fields: [userId], references: [id])
  resource Resource @relation(fields: [resourceId], references: [id])

  @@unique([userId, resourceId])
  @@map("bookmarks")
}
